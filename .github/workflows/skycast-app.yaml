name: Build & Deploy BlazorApp

on: 
  push:
    branches: ["main"]
env:
  DOTNET_VERSION: '9.0.x'
  NODE_VERSION: '22.x'

permissions:
  contents: write
  pages: write
  id-token: write    

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1.-Descargar el cÃ³digo ...
      - uses: actions/checkout@v4

      #2-Instalar d.Net
      - name: Setup -NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{env.DOTNET_VERSION}}

      #3.- Paquetes Nugget
      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

      #4.- Instalar Node para TailWind
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}


      #5.- Restore and publish
      - name: Publicar App Blazor
        run: |
          dotnet restore
          # Inyectar la API Key en el build                    
          echo "{\"OpenWeather\":{\"key\":\"${{ secrets.OPENWEATHER_KEY }}\"}}" > SkyCast/appsettings.Production.json
          dotnet publish SkyCast/SkayCast.csproj -c Release -o publish

      - name: Listar salida
        run: |
          echo "Contenido Geneado"
          ls -R publish | head -n 100
      #6.- Artifact , generar un ejecutable y hacer pruebas
      - uses: actions/upload-artifact@v4
        with:
          name: publish
          path: publish

      #7.-Despliegue
      - name: Deploy to packages
        uses: peaceiris/actions-gh-pages@v4
              
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: publish/wwwroot
          force_orphan: true